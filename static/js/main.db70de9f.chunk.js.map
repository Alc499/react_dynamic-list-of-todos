{"version":3,"sources":["api/getData.js","Components/getSortedList.js","Components/User.js","Components/TodoItem.js","Components/TodoList.js","App.js","index.js"],"names":["getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getData","_ref3","_callee3","todos","users","_context3","sent","map","todo","objectSpread","user","find","id","userId","currentKey","currentTodos","sortedTodos","getSortedList","sortField","reverse","callbackMap","b","title","localeCompare","name","callback","toConsumableArray","sort","User","currentUser","react_default","createElement","Fragment","className","email","phone","TodoItem","Components_User","completed","type","checked","TodoList","data-sort-type","data-column","Components_TodoItem","key","App","state","visibleTodos","isLoaded","isLoading","handleClick","_this","setState","setTimeout","sortBy","prevState","_this2","_this$state","onClick","Components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.db70de9f.chunk.js","sourcesContent":["const getTodos = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/todos';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/users';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getData = async() => {\n  const todos = await getTodos();\n  const users = await getUsers();\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n};\n\nexport default getData;\n","let currentKey = '';\nlet currentTodos = [];\nlet sortedTodos = [];\n\nconst getSortedList = ({ todos, sortField }) => {\n  if (currentKey === sortField && currentTodos === todos) {\n    return sortedTodos.reverse();\n  }\n\n  currentKey = sortField;\n  currentTodos = todos;\n\n  const callbackMap = {\n    id: (a, b) => a.id - b.id,\n    title: (a, b) => a.title.localeCompare(b.title),\n    user: (a, b) => a.user.name.localeCompare(b.user.name),\n  };\n\n  const callback = callbackMap[sortField] || callbackMap.id;\n\n  sortedTodos = [...todos].sort(callback);\n\n  return sortedTodos;\n};\n\nexport default getSortedList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ currentUser }) => (\n  <>\n    <td className=\"todo-list-table__user-info\">{ currentUser.name }</td>\n    <td className=\"todo-list-table__user-info\">{ currentUser.email }</td>\n    <td className=\"todo-list-table__user-info\">{ currentUser.phone }</td>\n  </>\n);\n\nUser.propTypes = {\n  currentUser: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <User currentUser={todo.user} />\n    <td className=\"todo-list-table__task\">\n      {todo.title}\n      {todo.completed\n        ? <input type=\"checkbox\" checked />\n        : <input type=\"checkbox\" /> }\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <table className=\"todo-list-table\">\n    <thead>\n      <tr className=\"todo-list-table__titles\">\n        <th\n          data-sort-type=\"id\"\n          data-column=\"0\"\n          className=\"todo-list-table__title\"\n        >\n          ID\n        </th>\n        <th\n          data-sort-type=\"name\"\n          data-column=\"1\"\n          className=\"todo-list-table__title\"\n        >\n          User Name\n        </th>\n        <th\n          data-sort-type=\"name\"\n          data-column=\"2\"\n          className=\"todo-list-table__title\"\n        >\n          E-mail\n        </th>\n        <th\n          data-sort-type=\"name\"\n          data-column=\"3\"\n          className=\"todo-list-table__title\"\n        >\n          Phone\n        </th>\n        <th\n          data-sort-type=\"todos\"\n          data-column=\"4\"\n          className=\"todo-list-table__title\"\n        >\n          Tasks\n        </th>\n      </tr>\n    </thead>\n    <tbody className=\"todo-list-table__tasks\">\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport getSortedList from './Components/getSortedList';\nimport TodoList from './Components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    visibleTodos: [],\n    isLoaded: false,\n    isLoading: false,\n    sortField: 'id',\n  };\n\n  async componentDidMount() {\n    const todos = await getData();\n\n    this.setState({\n      todos,\n      visibleTodos: [...todos],\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 2000);\n  };\n\n  sortBy = (sortField) => {\n    this.setState({\n      sortField,\n    });\n    this.setState(prevState => ({\n      visibleTodos: getSortedList(prevState),\n    }));\n  };\n\n  render() {\n    const {\n      visibleTodos,\n      isLoaded,\n      isLoading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        { isLoaded ? (\n          <>\n            <h1 className=\"main-title\">Dynamic list of todos</h1>\n\n            <div className=\"sort-buttons\">\n              <h2>\n                Sort by:\n              </h2>\n              <button\n                type=\"button\"\n                onClick={() => this.sortBy('id')}\n                className=\"sort-buttons__btn\"\n              >\n                ID\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.sortBy('title')}\n                className=\"sort-buttons__btn\"\n              >\n                Task\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.sortBy('user')}\n                className=\"sort-buttons__btn\"\n              >\n                User\n              </button>\n            </div>\n\n            <TodoList todos={visibleTodos} />\n          </>\n        ) : (\n          <button type=\"button\" onClick={this.handleClick} className=\"load-btn\">\n            {isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}